[tool.poetry]
name = "analysis"
version = "0.1.0"
description = ""
authors = ["Marc GÃ¤hwiler <marc@marcg.ch>"]

#readme = "README.rst"
packages = [
    { include = "app" }
]

[tool.poetry.dependencies]
python = "^3.10"
tortoise-orm = {extras = ["aiosqlite"], version = "^0.19.0"}
aerich = "^0.6.3"
redis = "^4.3.1"
aiohttp = "^3.8.1"
pydantic = {extras = ["dotenv"], version = "^1.9.0"}
toml = "^0.10.2"
uvicorn = {extras = ["standard"], version = "^0.17.6"}
fastapi = "^0.78.0"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
pytest = "^7.1.2"
pytest-asyncio = "^0.18.3"
mypy = "^0.950"

[build-system]
requires = ["poetry>=1.1.13"]
build-backend = "poetry.masonry.api"

[tool.aerich]
tortoise_orm = "app.core.config.DATABASE_CONFIG"
location = "./migrations"
src_folder = "./."

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
#extend-exclude = [
#    '^/app/sources/picturepark/client',  # PicturePark API client (generated)
#    '\.git',
#    '\.mypy_cache',
#    '\.pytest_cache',
#    '\.tox',
#    '\.?venv',
#]
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.?venv
  | app/sources/picturepark/client  # PicturePark API client (generated)
)/
'''

[tool.isort]
profile = "black"

[tool.mypy]
python_version = '3.10'
plugins = 'pydantic.mypy'
ignore_missing_imports = 'True'
disallow_untyped_defs = 'True'
warn_unused_configs = true
strict = true

# Files to exclude
exclude = [
    'test_(.+)\.py$',
    '^app/sources/picturepark/client/',  # PicturePark API client (generated)
]

[[tool.mypy.overrides]]
module = 'app.sources.picturepark.client.*'
follow_imports = 'skip'
